@*<link href="~/Content/jquery-ui.min.css" rel="stylesheet" />*@
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<style>
    .row {
        padding-top: 10px;
    }
</style>

<script>
    function DoCreateNewTask() {
        $.ajax({
            url : '@Url.Action("DoCreateTask")',
            data: { processInfo: cbProcess.GetValue() },
            success: function (data) {
                var type = "success";
                //DevExpress.ui.notify(data.Message, type, 2000);
                showPopup(data.Message);
                setTimeout(function () {
                    window.location.reload();
                }, 2500);
            }
        })
    }

    function OnSelectionTaskChanged(s, e) {
        gvTaskList.GetSelectedFieldValues("TaskId", function (values) {
            OnRefreshTask(values[0]);

        });
    }
    function OnRefreshTask(taskId) {
        //LoadingPanel.Show();
         $.ajax({
             url: '@Url.Action("GetTaskDetail")',
             type: 'GET',
             data: { taskId: taskId },
             success: function (response) {
                    LoadingPanel.Hide();
                    $("#task-info").html(response);
                }
            })
    }

    function OnUpdateTask(s, e) {
        $("#Outcome").val(s.name);
        $.ajax({
            url: '@Url.Action("DoUpdateTask")',
            type: 'POST',
            data: $("#frm-update-task").serialize(),
            success: function (data) {
                showPopup(data.Message);
                if (data.Success == true) {
                    if (data.Reload == true) {
                        setTimeout(function () {
                            window.location.reload();
                        }, 1500);
                    } else {
                        OnRefreshTask(TaskId.GetValue())
                        setTimeout(function () {
                            hidePopup();
                        }, 1500);
                    }
                }

            }
        })
    }
</script>
@using (Html.BeginForm("", "", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-1">
            @Html.DevExpress().Label(lb =>
           {
               lb.Text = "Người dùng";
               lb.AssociatedControlName = "username";
               lb.Width = Unit.Percentage(100);
           }).GetHtml()
        </div>
        <div class="col-md-4">
            @Html.DevExpress().TextBox(m=> {
                m.Name = "username";
                m.Width = Unit.Percentage(100);
            }).Bind(Session["Username"]).GetHtml()
        </div>
        <div class="col-md-1">
            @Html.DevExpress().Button(btn => {
           btn.Width = Unit.Percentage(100);
           btn.Text = "Chọn user";
           btn.Name = "btnChooseUser";
           btn.UseSubmitBehavior = true;
       }).GetHtml()
        </div>
    </div>

}

<div class="row">

    @if (string.IsNullOrEmpty(Session["Username"] + "") == false)
    {
        <div class="col-md-1">
            @Html.DevExpress().Label(lb =>
           {
               lb.Text = "Luồng";
               lb.AssociatedControlName = "cbProcess";
               lb.Width = Unit.Percentage(100);
           }).GetHtml()
        </div>
        <div class="col-sm-4">
            @Html.DevExpress().ComboBox(cbSettings => {
           cbSettings.Width = Unit.Percentage(100);
           cbSettings.Name = "cbProcess";
           cbSettings.Properties.Columns.Add("CompositeDN");
           cbSettings.Properties.Columns.Add("ProcessName");
           cbSettings.Properties.ValueField = "ID";
       }).BindList(ViewData["ProcessList"]).GetHtml()
            @*@(Html.DevExtreme().SelectBox()
                    .Name("processInfo")
                    .DataSource(d => d.Mvc().LoadAction("LoadProcessList").Key("ID"))
                    .DisplayExpr("ID")
                    .ValueExpr("ID")
                    .SearchEnabled(true)
                )*@

        </div>
        <div class="col-sm-1">
            @*<button class="form-control btn btn-primary " type="button" onclick="DoCreateNewTask()">Khởi tạo</button>*@
            @Html.DevExpress().Button(settings => {
           settings.Width = Unit.Percentage(100);
           settings.Text = "Khởi tạo";
           settings.Name = "btnCreateNewProcessInstance";
           settings.ClientSideEvents.Click = "DoCreateNewTask";
       }).GetHtml()
        </div>
    }
</div>

<div style="padding-top:10px">
    @Html.Action("LoadTaskList")
</div>

<div style="padding-top:10px" id="task-info"></div>